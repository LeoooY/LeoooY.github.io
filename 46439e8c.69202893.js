(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{100:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return u}));var i=n(2),a=n(6),o=(n(0),n(228)),r={},c={unversionedId:"FE/React/reactHook/useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848",id:"FE/React/reactHook/useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848",isDocsHomePage:!1,title:"useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848",description:"https://gist.github.com/astoilkov/013c513e33fe95fa8846348038d8fe42",source:"@site/docs/FE/React/reactHook/useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848.md",slug:"/FE/React/reactHook/useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848",permalink:"/docs/FE/React/reactHook/useReducer\u5f02\u6b65\u89e3\u51b3\u65b9\u6848",version:"current"},l=[{value:"Problem",id:"problem",children:[]},{value:"Solution 1",id:"solution-1",children:[{value:"Pros",id:"pros",children:[]},{value:"Cons",id:"cons",children:[]}]},{value:"Solution 2",id:"solution-2",children:[{value:"Pros",id:"pros-1",children:[]},{value:"Cons",id:"cons-1",children:[]}]},{value:"Solution 3",id:"solution-3",children:[{value:"Pros",id:"pros-2",children:[]},{value:"Cons",id:"cons-2",children:[]}]},{value:"Conclusion",id:"conclusion",children:[]}],s={rightToc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://gist.github.com/astoilkov/013c513e33fe95fa8846348038d8fe42"}),"https://gist.github.com/astoilkov/013c513e33fe95fa8846348038d8fe42")),Object(o.b)("p",null,"1 \u81ea\u5df1\u624b\u52a8\u5728\u5f02\u6b65\u51fd\u6570.then()\u4e2d\u53bb\u51fa\u53d1dispatch"),Object(o.b)("p",null,"2 \u4f7f\u7528useEffect()\uff0c\u5728dispatch()\u6539\u53d8\u67d0\u4e2aflag\u540e\u53bb\u8bf7\u6c42\uff08\u7f3a\u70b9\u662f\u9700\u8981\u591a\u4e00\u4e2auseState()\u6765\u8f85\u52a9\u63a7\u5236\uff09"),Object(o.b)("p",null,"3 \u5c01\u88c5\u4e00\u4e2a\u628a\u5f02\u6b65\u64cd\u4f5c\u5305\u8d77\u6765\u7684\u51fd\u6570(\u53c2\u6570\u662fuseReducer()\u7684dispath)\uff0c\u5728\u8fd9\u4e2a\u51fd\u6570\u4e2d\u505a\u5f02\u6b65\u64cd\u4f5c\u548cdispath"),Object(o.b)("h1",{id:"async-operations-with-usereducer-hook"},"Async Operations with ",Object(o.b)("inlineCode",{parentName:"h1"},"useReducer")," Hook"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"9 March, 2019")),Object(o.b)("p",null,"We were discussing with ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/erusev"}),"@erusev")," what we can do with async operation when using ",Object(o.b)("inlineCode",{parentName:"p"},"useReducer()")," in our application. Our app is simple and we don't want to use a state management library. All our requirements are satisfied with using one root ",Object(o.b)("inlineCode",{parentName:"p"},"useReducer()"),". The problem we are facing and don't know how to solve is async operations."),Object(o.b)("p",null,"In ",Object(o.b)("a",Object(i.a)({parentName:"p"},{href:"https://twitter.com/antoniostoilkov/status/1104049838113636352"}),"a discussion with Dan Abramov")," he recommends ",Object(o.b)("strong",{parentName:"p"},"Solution 3")," but points out that things are fresh with hooks and there could be better ways of handling the problem."),Object(o.b)("h2",{id:"problem"},"Problem"),Object(o.b)("p",null,"Doing asynchronous operations in a ",Object(o.b)("inlineCode",{parentName:"p"},"useReducer")," reducer is not possible. We have thought of three possible solutions and can't figure which one is better or if there is an even better solution."),Object(o.b)("p",null,"We are searching for a solution where a single action will be used multiple times in multiple places all over the application."),Object(o.b)("h2",{id:"solution-1"},"Solution 1"),Object(o.b)("p",null,"Just manually call the async function and after it completes call the dispatch."),Object(o.b)("h3",{id:"pros"},"Pros"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"No additional abstraction"),Object(o.b)("li",{parentName:"ul"},"Doesn't introduce additional learning curve because it uses already existing ideas")),Object(o.b)("h3",{id:"cons"},"Cons"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Now calling ",Object(o.b)("inlineCode",{parentName:"li"},"dispatch({ type: 'DELETE_FILE' })")," have an invisible dependency/requirement. If you don't execute the required code before the ",Object(o.b)("inlineCode",{parentName:"li"},"dispatch")," call you are calling for a strange bug that can be missed depending on the app architecture"),Object(o.b)("li",{parentName:"ul"},"For larger async operations we need to extract the code in a global place ")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"function App() {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'DELETE_FILE':\n        let index = state.files.indexOf(action.file);\n\n        return {\n          ...state,\n\n          files: [...state.files.slice(0, index), ...state.file.slice(index + 1)]\n        };\n    }\n  }, {\n    files: ['a', 'b', 'c'],\n  });\n\n  return (\n    <DispatchContext.Provider value={dispatchMiddleware(dispatch)}>\n      <Component files={state.files} />\n    </DispatchContext.Provider>\n  );\n}\n\nfunction Component({ files }) {\n  const dispatch = useContext(DispatchContext);\n  \n  function deleteFile(file) {\n    unlink(file, () => {\n      dispatch({ type: 'DELETE_FILE', file: file });      \n    });\n  }\n\n  return (\n    <>\n      {files.map(file =>\n        <button onClick={() => deleteFile(file)}>Delete File</button>\n      )}\n    </>\n  );\n}\n")),Object(o.b)("h2",{id:"solution-2"},"Solution 2"),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"useEffect()")," hook to delete the file."),Object(o.b)("h3",{id:"pros-1"},"Pros"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The only location where a side effect like writing to a file or fetching data can be is in a ",Object(o.b)("inlineCode",{parentName:"li"},"useEffect()")," hook. This improves the cognitive load of understanding the code.")),Object(o.b)("h3",{id:"cons-1"},"Cons"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"An additional state property"),Object(o.b)("li",{parentName:"ul"},"State property which may not be used in the UI. Not sure if that is a problem. Maybe state properties that are not part of the UI are normal."),Object(o.b)("li",{parentName:"ul"},"If while deleting the file we don't want to show a UI indication the code goes through the component twice which is a small inefficiency and a confusion when you imagine it. Goes through the component logic just to execute a ",Object(o.b)("inlineCode",{parentName:"li"},"useEffect()")," call.")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"function App() {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'REQUEST_DELETE_FILE':\n        return {\n          ...state,\n\n          deleteFile: action.file\n        };\n      case 'DELETE_FILE':\n        const index = state.files.indexOf(action.file);\n\n        return {\n          ...state,\n\n          files: [...state.files.slice(0, index), ...state.file.slice(index + 1)]\n        };\n    }\n  }, {\n    deleteFile: null,\n    files: ['a', 'b', 'c'],\n  });\n\n  useEffect(() => {\n    if (!state.deleteFile) {\n      return;\n    }\n\n    unlink(state.deleteFile, () => {\n      dispatch({ type: 'DELETE_FILE', file: state.deleteFile });\n    });\n  }, [state.deleteFile]);\n\n  return (\n    <DispatchContext.Provider value={dispatchMiddleware(dispatch)}>\n      <Component files={state.files} />\n    </DispatchContext.Provider>\n  );\n}\n\nfunction Component({ files }) {\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <>\n      {files.map(file =>\n        <button onClick={dispatch({ type: 'REQUEST_DELETE_FILE', file: file })}>Delete File</button>\n      )}\n    </>\n  );\n}\n")),Object(o.b)("h2",{id:"solution-3"},"Solution 3"),Object(o.b)("p",null,"Use a middleware for dispatch which performs the async operation and then calls the actual dispatch."),Object(o.b)("h3",{id:"pros-2"},"Pros"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Doesn't have the disadvantages of ",Object(o.b)("strong",{parentName:"li"},"Solution 1")," and ",Object(o.b)("strong",{parentName:"li"},"Solution 2"))),Object(o.b)("h3",{id:"cons-2"},"Cons"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"A more complicated architecture. Two places where actions are handled.")),Object(o.b)("pre",null,Object(o.b)("code",Object(i.a)({parentName:"pre"},{className:"language-jsx"}),"function dispatchMiddleware(dispatch) {\n  return (action) => {\n    switch (action.type) {\n      case 'DELETE_FILE':\n        unlink(action.file, () => dispatch(action));\n        break;\n\n      default:\n        return dispatch(action);\n    }\n  };\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case 'DELETE_FILE':\n        let index = state.files.indexOf(action.file);\n\n        return {\n          ...state,\n\n          files: [...state.files.slice(0, index), ...state.file.slice(index + 1)]\n        };\n    }\n  }, {\n    files: ['a', 'b', 'c']\n  });\n\n  return (\n    <DispatchContext.Provider value={dispatchMiddleware(dispatch)}>\n      <Component files={state.files} />\n    </DispatchContext.Provider>\n  );\n}\n\nfunction Component({ files }) {\n  const dispatch = useContext(DispatchContext);\n\n  return (\n    <>\n      {files.map(file =>\n        <button onClick={dispatch({ type: 'DELETE_FILE', file: file })}>Delete File</button>\n      )}\n    </>\n  );\n}\n")),Object(o.b)("h2",{id:"conclusion"},"Conclusion"),Object(o.b)("p",null,"While discussing we raised two questions we are not sure the answers to. They can help us in deciding the right pattern:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Is it normal to do side effects like writing a file or fetching data in an event handler or it should be only in ",Object(o.b)("inlineCode",{parentName:"li"},"useEffect()"),"?"),Object(o.b)("li",{parentName:"ul"},"Is it normal to have properties in the state object which are not used in the view at all?")))}u.isMDXComponent=!0},228:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),b=i,h=p["".concat(r,".").concat(b)]||p[b]||d[b]||o;return n?a.a.createElement(h,c(c({ref:t},s),{},{components:n})):a.a.createElement(h,c({ref:t},s))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:i,r[1]=c;for(var s=2;s<o;s++)r[s]=n[s];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);